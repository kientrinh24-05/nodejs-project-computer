<style>
  .select2-container--default .select2-selection--single {
    height: 46px;
  }

  .select-pure__select {
    align-items: center;
    background: #f9f9f8;
    border-radius: 4px;
    border: 1px solid rgba(0, 0, 0, 0.15);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
    box-sizing: border-box;
    color: #363b3e;
    cursor: pointer;
    display: flex;
    font-size: 14px;
    font-weight: 400;
    justify-content: left;
    min-height: 44px;
    padding: 5px 10px;
    position: relative;
    transition: 0.2s;
    width: 100%;
  }

  .select-pure__options {
    border-radius: 4px;
    border: 1px solid rgba(0, 0, 0, 0.15);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
    box-sizing: border-box;
    color: #363b3e;
    display: none;
    left: 0;
    max-height: 221px;
    overflow-y: scroll;
    position: absolute;
    top: 50px;
    width: 100%;
    z-index: 5;
  }

  .select-pure__select--opened .select-pure__options {
    display: block;
  }

  .select-pure__option {
    background: #fff;
    border-bottom: 1px solid #e4e4e4;
    box-sizing: border-box;
    height: 44px;
    line-height: 25px;
    padding: 10px;
  }

  .select-pure__option--disabled {
    color: #e4e4e4;
  }

  .select-pure__option--selected {
    color: #e4e4e4;
    cursor: initial;
    pointer-events: none;
  }

  .select-pure__option--hidden {
    display: none;
  }

  .select-pure__selected-label {
    font-size: 12px;
    align-items: 'center';
    background: teal;
    border-radius: 4px;
    color: #fff;
    cursor: initial;
    display: inline-flex;
    justify-content: 'center';
    margin: 5px 10px 5px 0;
    padding: 3px 7px;
  }

  .select-pure__selected-label:last-of-type {
    margin-right: 0;
  }

  .select-pure__selected-label i {
    cursor: pointer;
    display: inline-block;
    margin-left: 7px;
  }

  .select-pure__selected-label img {
    cursor: pointer;
    display: inline-block;
    height: 18px;
    margin-left: 7px;
    width: 14px;
  }

  .select-pure__selected-label i:hover {
    color: #e4e4e4;
  }

  .select-pure__autocomplete {
    background: #f9f9f8;
    border-bottom: 1px solid #e4e4e4;
    border-left: none;
    border-right: none;
    border-top: none;
    box-sizing: border-box;
    font-size: 16px;
    outline: none;
    padding: 10px;
    width: 100%;
  }

  .select-pure__placeholder--hidden {
    display: none;
  }
</style>

<div class="col">
  <div class="card">
    <!-- Card header -->
    <div class="card-header border-0">
      <h3 class="mb-0">HÓA ĐƠN</h3>
    </div>
    <!-- Light table -->
    <div class="box-loading load-data" style="display: none;">
      <div class="loadingio-spinner-rolling-lwtpylw27h">
        <div class="ldio-5lswg297lfp">
          <div>
          </div>
        </div>
      </div>
    </div>
    <div class="table-responsive">
      <table class="table align-items-center table-flush">
        <thead class="thead-light">
          <tr>
            <th scope="col" class="sort" data-sort="name">#</th>
            <th scope="col" class="sort" data-sort="name">Mã đơn hàng</th>
            <th scope="col" class="sort" data-sort="budget">Khách hàng</th>
            <th scope="col" class="sort" data-sort="budget">Thành tiền</th>
            <th scope="col" class="sort" data-sort="status">Trạng thái</th>
            <th scope="col" class="sort" data-sort="status">Người tạo</th>
            <th scope="col" class="sort" data-sort="status">Ngày tạo</th>
            <th scope="col"></th>
          </tr>
        </thead>
        <tbody class="list">

          <% if (categories) { %>
            <% categories.forEach((item,index)=> { %>
              <tr id="item-<%= item.id %>">
                <th scope="row">
                  <div class="media align-items-center">
                    <div class="media-body">
                      <span class="name mb-0 text-sm">
                        <%= item.id %>
                      </span>
                    </div>
                  </div>
                </th>
                <td class="budget">
                  <%= item.code %>
                </td>
                <td class="budget">
                  <%= item.cFullname %>
                </td>
                <td class="budget">
                  <%= item.amount.toLocaleString('vi-VN', { style: 'currency' , currency: 'VND' }) %>
                </td>
                <td>
                  <span class="badge badge-dot mr-4">
                    <span class="status">
                      <% if (item.status==1) { %>
                        <span class="btn btn-success btn-sm" style="font-size: 10px; box-shadow: none;">thành
                          công</span>
                        <% } %>
                          <% if(item.status==3) { %>
                            <span class="btn btn-warning btn-sm" style="font-size: 10px; box-shadow: none;">chưa xử
                              lý</span>
                            <% } %>
                              <% if (item.status==2) { %>
                                <span class="btn btn-danger btn-sm"
                                  style="font-size: 10px; box-shadow: none;">hủy</span>
                                <% } %>
                    </span>
                  </span>
                </td>
                <td class="budget">
                  <%= item.uFullname %>
                </td>
                <td class="budget">
                  <%= moment(item.createTime).format('DD-MM-YYYY hh:mm') %>
                </td>
                <td class="text-right">
                  <div class="dropdown">
                    <a class="btn btn-sm btn-icon-only text-light" href="#" role="button" data-toggle="dropdown"
                      aria-haspopup="true" aria-expanded="false">
                      <i class="fas fa-ellipsis-v"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right dropdown-menu-arrow">
                      <button type="button" class="dropdown-item btn-edit" data-toggle="modal"
                        onclick="getOrderDetail(<%= item.id %>)" data-target="#exampleModalEdit">
                        Sửa
                      </button>
                      <button type="button" class="dropdown-item" data-toggle="modal"
                        data-target="#exampleModalDelete-<%= item.id %>">
                        Xóa
                      </button>
                    </div>
                  </div>
                </td>
              </tr>
              <% }) %>
                <% } %>
        </tbody>
      </table>
      <% if (categories?.length==0) { %>
        <div class="alert alert-warning text-center">
          Không tìm thấy kết quả nào
        </div>
        <% } %>
    </div>
    <!-- Card footer -->
    <div class="card-footer py-4">
      <nav aria-label="...">
        <ul class="pagination justify-content-end mb-0">
          <% for (i=1; i <=total; i ++) { %>
            <% if(curentPage==i) { %>
              <li class="page-item active">
                <% if (q !='' || filter !='' ) { %>
                  <a class="page-link"
                    href="/admin/order/search?q=<%= q.replace(/%/g,'') %>&filterStatus=<%=filter%>&page=<%= i %>">
                    <%= i %>
                  </a>
                  <% } else { %>
                    <a class="page-link" href="/admin/order/?page=<%= i %>">
                      <%= i %>
                    </a>
                    <% } %>

              </li>
              <%} else { %>
                <li class="page-item">

                  <% if (q !='' || filter !='' ) { %>
                    <a class="page-link"
                      href="/admin/order/search?q=<%= q.replace(/%/g,'') %>&filterStatus=<%=filter%>&page=<%= i %>">
                      <%= i %>
                    </a>
                    <% } else { %>
                      <a class="page-link" href="/admin/order/?page=<%= i %>">
                        <%= i %>
                      </a>
                      <% } %>
                </li>
                <%} %>
                  <% } %>
        </ul>
      </nav>
    </div>
  </div>
</div>

<!-- THÊM -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
  aria-hidden="true">
  <div class="box-loading load-modal" style="display: none;">
    <div class="loadingio-spinner-rolling-lwtpylw27h">
      <div class="ldio-5lswg297lfp">
        <div>
        </div>
      </div>
    </div>
  </div>
  <div class="modal-dialog modal-dialog-centered mw-100" style="width: 55%" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">THÊM HÓA ĐƠN</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form method="POST" class="create-item" action="/admin/order/create">
        <div class="modal-body">
          <div class="row">
            <div class="col">
              <h3 class="mb-4">Thông tin đơn hàng</h3>
              <div class="form-group">
                <label for="exampleFormControlInput1">Giá sản phẩm</label>
                <input type="text" class="form-control" name="price">
              </div>
             
              <div class="form-group">
                <label>Ghi chú</label>
                <textarea name="note" id="editor"></textarea>
              </div>

            </div>
            <div class="col">
              <h3 class="mb-4">Thông tin khách hàng</h3>
              <div class="form-group">
                <label for="exampleFormControlInput1">Tìm kiếm khách hàng</label>
                <select id="customer" class="form-control js-example-tags">
                  <option selected="selected" value="0">Nhập điện thoại</option>
                  <% customers.forEach(element=> { %>
                    <option value="<%= element.id %> ">
                      <%= element.phone %>
                    </option>
                    <% }) %>
                </select>
              </div>
              <div class="form-group">
                <label for="exampleFormControlInput1">Tài khoản</label>
                <input type="text" class="form-control" name="username">
              </div>
              <div class="form-group">
                <label for="exampleFormControlInput1">Họ tên</label>
                <input type="text" class="form-control" name="fullname">
              </div>
              <div class="form-group">
                <label for="exampleFormControlInput1">Email</label>
                <input type="text" class="form-control" name="email">
              </div>
              <div class="form-group">
                <label for="exampleFormControlInput1">Điện thoại</label>
                <input type="text" class="form-control" name="phone">
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
          <button onclick="onLoadingModal(event)" type="submit" class="btn btn-primary">Lưu</button>
        </div>
      </form>
    </div>
  </div>
</div>
<!-- Sửa -->
<div class="modal fade" id="exampleModalEdit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
  aria-hidden="true">
  <div class="box-loading load-modal" style="display: none;">
    <div class="loadingio-spinner-rolling-lwtpylw27h">
      <div class="ldio-5lswg297lfp">
        <div>
        </div>
      </div>
    </div>
  </div>
  <div class="modal-dialog modal-dialog-centered mw-100 form-update" style="width: 55%" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">CẬP NHẬT HÓA ĐƠN # </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col">
            <h3 class="mb-4">Thông tin đơn hàng</h3>
            <div class="form-group">
              <label for="exampleFormControlInput1">Trạng thái</label>
              <select name="status" class="form-control">
                <option value="3">chưa xử lý</option>
                <option value="1">thành công</option>
                <option value="2">hủy</option>
              </select>
            </div>
           
            <div class="form-group">
              <label>Ghi chú</label>
              <textarea name="note" id="editorUpdate"></textarea>
            </div>
            <h3 class="mb-4">Thông tin khách hàng</h3>
            <div class="form-group">
              <label for="exampleFormControlInput1">Tài khoản</label>
              <input type="text" class="form-control" name="username" disabled>
            </div>
            <div class="form-group">
              <label for="exampleFormControlInput1">Họ tên</label>
              <input type="text" class="form-control" name="fullname" disabled>
            </div>
            <div class="form-group">
              <label for="exampleFormControlInput1">Email</label>
              <input type="text" class="form-control" name="email" disabled>
            </div>
            <div class="form-group">
              <label for="exampleFormControlInput1">Điện thoại</label>
              <input type="text" class="form-control" name="phone" disabled>
            </div>
          </div>
          <div class="col">
            <h3 class="mb-4">Chi tiết thanh toán</h3>
            <div class="form-group order-details">
              <div id="order-details"></div>

              <div class="my-3" style="width: 100%; height: 1px; background-color: gray;"></div>
              <div class="d-flex">
                <label style="width: 200px; font-weight: 600;">Thành tiền :</label>
                <label id="orderTotal" style="font-weight: 600;">2000 đ</label>
              </div>

            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
        <button onclick="updateOrderDetail(event)" type="submit" class="btn btn-primary">Lưu</button>
      </div>
    </div>
  </div>
</div>

<!-- XÓA  -->
<% if (categories) { %>
  <% categories.forEach((item,index)=> { %>
    <div class="modal fade" id="exampleModalDelete-<%= item.id %>" tabindex="-1" role="dialog"
      aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="box-loading load-modal" style="display: none;">
        <div class="loadingio-spinner-rolling-lwtpylw27h">
          <div class="ldio-5lswg297lfp">
            <div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">XÓA HÓA ĐƠN</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            Bạn có muốn xóa hóa đơn này ?
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            <a href="/admin/order/delete/<%= item.id %>" class="btn btn-primary">Lưu</a>
          </div>
          </form>
        </div>
      </div>
    </div>
    <% }) %>
      <% } %>

        <!-- IMPORT EXCEL  -->
        <button style="opacity: 0;" type="button" class="btn btn-block btn-warning mb-3" data-toggle="modal"
          data-target="#modal-notification">Notification</button>
        <div class="modal fade" id="modal-notification" tabindex="-1" role="dialog" aria-labelledby="modal-notification"
          aria-hidden="true">
          <div class="modal-dialog  modal-dialog-centered modal-" role="document">
            <div class="modal-content ">

              <div class="modal-header">
                <h6 class="modal-title" id="modal-title-notification">Import excel danh sách hóa đơn</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">×</span>
                </button>
              </div>

              <div class="modal-body">

                <div class="py-3 text-center">
                  <div class="position-relative">
                    <div class="position-absolute" style="
                          top: 50%;
                          left: 50%;
                          transform: translate(-50%,-50%);
                          width: 100px;
                          /* opacity: 0; */
                          cursor: pointer;
                          height: 100%;
                      ">
                      <form class="form-upload h-100 d-block" action="/admin/upload?path=admin" method="POST"
                        enctype="multipart/form-data">
                        <div class="h-100">
                          <input type="file" name="file" style="
                                display: block;
                                height: 100%;
                                width: 100%;
                                cursor: pointer;
                                opacity: 0;
                            ">
                        </div>
                      </form>
                    </div>
                    <div>
                      <i class="fas fa-file-upload ni-3x"></i>
                      <div>
                        <span id="excel-name" style="font-size: 12px" class="text-primary"></span>
                      </div>
                    </div>
                  </div>
                  <h4 class="heading mt-4">Tải lên file Excel</h4>
                  <p>Tải xuống file mẫu <a class="text-success" href="/static/assets/uploads/admin/danh-muc.xlsx">click
                      vào đây</a></p>
                </div>

              </div>

              <div class="modal-footer">
                <form action="/admin/order/excel/import" method="POST">
                  <input type="hidden" name="path-excel-import">
                  <button type="submit" class="btn btn-white">Lưu</button>
                </form>
                <button type="button" class="btn btn-link text-white ml-auto" data-dismiss="modal">Đóng</button>
              </div>

            </div>
          </div>


          <!-- CODE JS  -->

          <script>


            const username = document.querySelector('input[name=username]');
            const fullname = document.querySelector('input[name=fullname]');
            const email = document.querySelector('input[name=email]');
            const phone = document.querySelector('input[name=phone]');
            const roomId = document.querySelector('input[name=roomId]');
            const price = document.querySelector('input[name=price]');
            const code = document.querySelector('input[name=code]');


            $("#customer").select2({
              tags: true
            });

            var $eventLog = $("#customer");
            var $eventSelect = $("#customer");

            $eventSelect.select2();

            $eventSelect.on("select2:open", function (e) { console.log("select2:open", e); });
            $eventSelect.on("select2:close", function (e) { console.log("select2:close", e); });
            $eventSelect.on("select2:select", function (e) { console.log("select2:select", e); });
            $eventSelect.on("select2:unselect", function (e) { console.log("select2:unselect", e); });


            $eventSelect.on("select2:change", function (e) { console.log("change"); });
            const dataCustomers = <%- JSON.stringify(customers) %>;
            $('#customer').on('select2:select', function (e) {
              const customerId = e.target.value;
              customer = dataCustomers.find(item => item.id == customerId);
              if (customer != null) {
                console.log(customer, 'customer');
                username.value = customer.username;
                fullname.value = customer.fullname;
                email.value = customer.email;
                phone.value = customer.phone;
              }

            });

            // Update note



            ClassicEditor
              .create(document.querySelector('#editor'), {
                toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'],
                heading: {
                  options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }
                  ]
                }
              })
              .then(editor => {
                window.editor = editor;
              })
              .catch(error => {
                console.log(error);
              });


            function getParameterByName(name, url = window.location.href) {
              name = name.replace(/[\[\]]/g, '\\$&');
              const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                results = regex.exec(url);
              if (!results) return null;
              if (!results[2]) return '';
              return decodeURIComponent(results[2].replace(/\+/g, ' '));
            }

            // utilities 

            const utilities = document.querySelector('#utilities');

            const action = getParameterByName('action');
            switch (action) {
              case "create":
                roomId.value = getParameterByName('roomId');
                price.value = getParameterByName('price');
                code.value = getParameterByName('code');
                $('#exampleModal').modal();
                break;
              case "update":
                const orderId = getParameterByName('orderId');
                getOrderDetail(orderId);
                break;
              default:
                break;
            }

            // update order
            let orderDetail = (title, amount) => `<div class="d-flex">
                <label style="width: 200px;">${title} :</label>
                <label>${amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</label>
              </div>`
            let orderIdset = 0;
            let editorUpdate;
            function getOrderDetail(id) {
              orderIdset = id;
              $('#exampleModalEdit').modal();
              const title = document.querySelector('.form-update .modal-title');
              const status = document.querySelector('.form-update select[name=status]');
              const statusOptions = document.querySelectorAll('.form-update select[name=status] option');
              const code = document.querySelector('.form-update input[name=code]');
              const timeCheckout = document.querySelector('.form-update input[name=timeCheckout]');
              const note = document.querySelector('.form-update textarea[name=note]');
              const username = document.querySelector('.form-update input[name=username]');
              const fullname = document.querySelector('.form-update input[name=fullname]');
              const email = document.querySelector('.form-update input[name=email]');
              const phone = document.querySelector('.form-update input[name=phone]');
              const orderTotal = document.querySelector('#orderTotal');
              const orderDetails = document.querySelector('#order-details');
              
              fetch(`/admin/order/${id}`)
                .then(response => response.json())
                .then(data => {
                  const order = data.order;
                  title.innerHTML = `CẬP NHẬT HÓA ĐƠN #${order.code}`;
                  statusOptions.forEach(item => {
                    if (item.value == order.status) {
                      item.setAttribute('selected', 'selected');
                    }
                  });

                  
                  ClassicEditor
                    .create(document.querySelector('#editorUpdate'), {
                      toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'],
                      heading: {
                        options: [
                          { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                          { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                          { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }
                        ]
                      }
                    })
                    .then(editor => {
                      window.editor = editor;
                      order.note = order.note ?? "";
                      editor.data.set(order.note);
                      editorUpdate = editor;
                    })
                    .catch(error => {
                      console.log(error);
                    });

                  username.value = order.cUsername;
                  fullname.value = order.cFullname;
                  email.value = order.cEmail;
                  phone.value = order.cPhone;
                  // roomPrice.innerHTML = order.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                  orderTotal.innerHTML = order.amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                  // order details 
                  let details = "";
                  
                  order.orderDetails.forEach(item => {
                      details += `<div class="d-flex">
                                        <label style="width: 200px;">${item.code} x ${item.quantity}</label>
                                        <label id="roomPrice">${(item.price * item.quantity).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</label>
                                  </div>
                                 `;

                  });


                  orderDetails.innerHTML = details;
               
                });
            }

            function updateOrderDetail(id) {
              const status = document.querySelector('.form-update select[name=status]');
              const statusOptions = document.querySelectorAll('.form-update select[name=status] option');
              const code = document.querySelector('.form-update input[name=code]');
              const note = document.querySelector('.form-update textarea[name=note]');
              const username = document.querySelector('.form-update input[name=username]');
              const fullname = document.querySelector('.form-update input[name=fullname]');
              const email = document.querySelector('.form-update input[name=email]');
              const phone = document.querySelector('.form-update input[name=phone]');
              const roomPrice = document.querySelector('#roomPrice');
              const orderTotal = document.querySelector('#orderTotal');
              const orderDetails = document.querySelector('#order-details');
              const orderId = getParameterByName('orderId') ?? orderIdset;

              fetch(`http://localhost:3000/admin/order/${orderId}`, {
              method: 'PUT', 
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  status: status.value,
                  note: editorUpdate.getData(),
                }),
                  })
                .then(response => response.json())
                .then(data => {
                   if(data.update){
                    toastr["success"]("Cập nhật hóa đơn thành công");
                   }
                })
                .catch((error) => {
                  console.error('Error:', error);
                });
            }


          </script>
          <script>
            toastr.options = {
              "closeButton": false,
              "debug": false,
              "newestOnTop": true,
              "progressBar": false,
              "positionClass": "toast-top-right",
              "preventDuplicates": false,
              "onclick": null,
              "showDuration": "300",
              "hideDuration": "1000",
              "timeOut": "5000",
              "extendedTimeOut": "1000",
              "showEasing": "swing",
              "hideEasing": "linear",
              "showMethod": "fadeIn",
              "hideMethod": "fadeOut"
            }

            // loading
            const loadingData = document.querySelector('.box-loading.load-data');
            const loadingModal = document.querySelector('.box-loading.load-modal');
            const formPost = document.querySelector('form[method=POST].create-item');
              
                <% if (!errorValidate && !successAlert) { %>
              window.addEventListener('load', onLoading);
              <%}%>

              function onLoading(event) {
                loadingData.style.display = 'flex';
                setTimeout(() => {
                  loadingData.style.display = 'none';
                }, 500);
              }

            function onLoadingModal(event) {
              event.preventDefault();
              loadingModal.style.display = 'flex';
              setTimeout(() => {
                loadingModal.style.display = 'none';
                formPost.submit();
              }, 500);
            }

            function reload() {
              window.location.href = "/admin/order/"
            }

            function exportExcel() {
              window.location.href = "/admin/order/excel/export"
            }
    

            let editId = 0;
            let prevDataEdit = null;
            const loadingModalEdit = document.querySelector('#exampleModalEdit .box-loading.load-modal');
            const formEdit = document.querySelector('#exampleModalEdit');
            const inputNameEdit = document.querySelector('#exampleModalEdit input[name=name]');
            const inputStatusEdit = document.querySelector('#exampleModalEdit select[name=status]');
            const optionEdits = document.querySelectorAll('#exampleModalEdit select[name=status] option');
            const optionEditValues = [];

            optionEdits.forEach(item => optionEditValues.push(item.value));

            function editItem(item) {
              if (prevDataEdit?.name != item.name) {
                inputNameEdit.value = item.name;
              }

              indexOptionSelected = optionEditValues.findIndex(o => o == item.status);
              optionEdits[indexOptionSelected].setAttribute('selected', 'selected');

              prevDataEdit = item;
              editId = item.id;

            }
             
                <% if (errorValidate) { %>
                const err = '<%= errorValidate %>';
              toastr["error"]("<%= errorValidate %>")

                <%}%>
                    <% if (successAlert) { %>
              toastr["success"]("<%= successAlert %>")
              <%}%>
          </script>